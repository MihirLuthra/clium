#! /usr/bin/env bash

# don't source the script twice
[ -n "$__ERROR_HANDLER__" ] && return 0
readonly __ERROR_HANDLER__=1

COMMON_PATH="$QUICKTEST_PATH/"src/scripts/common

set -e
source "$COMMON_PATH"/constants
set +e

echo_err() {
	>&2 echo "$@"
}

cecho_err() {
	echo_err -n "$RED"
	echo_err "$@"
	echo_err -n "$DEFAULT_COLOR"
}

printf_err() {
	>&2 printf "$@"
}

cprintf_err() {
	printf_err "$RED"
	printf_err "$@"
	printf_err "$DEFAULT_COLOR"
}

#
# param1:
#  path to normalize.
#
# Description:
#  Just gets the absolute path without a trailing forward slash
#  Doesn't resolve symlinks.
#
# retval:
#  1 on error
#
quicktest_path_normalize() {
	local path="$1" ; shift
	local abs_path_dir
	local abs_path

	if [ -z "$path" ] ; then
		echo_err "$BASH_SOURCE: Line $LINENO: param1(path) is empty"
		return 1
	fi

	abs_path="$( cd "$( dirname $path )" ; pwd )/$( basename $path )"

	printf "$abs_path"
}

alias a_echo_err='echo_err "$BOLD$( quicktest_path_normalize "$BASH_SOURCE" ): Line $LINENO:$BOLD_OFF" '
alias a_cecho_err='cecho_err "$( quicktest_path_normalize "$BASH_SOURCE" ): Line $LINENO:" '
alias a_printf_err='printf_err "%s\n" $BOLD"$( quicktest_path_normalize "$BASH_SOURCE" ): Line $LINENO:$BOLD_OFF" '
alias a_cprintf_err='cprintf_err "%s\n" "$( quicktest_path_normalize "$BASH_SOURCE" ): Line $LINENO:" '

alias return_if_error='
	if [ $? -ne 0 ] ; then
		a_echo_err "${FUNCNAME[0]}() failed"
		return 1
	fi
'

alias return_error='{ a_echo_err "${FUNCNAME[0]}() failed" && return 1; }'


f_print_if_key_is_null() {
	local line=$1 ; shift
	local file_path=$1 ; shift

	if [ -z "$2" ]
	then
		echo_err "$BOLD$file_path: Line $line:$BOLD_OFF" "key $1 is empty"
		return 0
	fi

	return 1
}

f_print_if_not_file() {
	local line=$1 ; shift
	local file_path=$1 ; shift

	if [ ! -f "$1" ]
	then
		echo_err "$BOLD$file_path: Line $line:$BOLD_OFF" "$1 : No such file"
		return 0
	fi

	return 1
}

f_exists_but_not_file() {
	local line=$1 ; shift
	local file_path=$1 ; shift

	if [ ! -f "$1" ] && [ -e "$1" ]
	then
		echo_err "$BOLD$file_path: Line $line:$BOLD_OFF" "$1 exists but isn't a file"
		return 0
	fi

	return 1
}

alias print_if_key_is_null='f_print_if_key_is_null "$LINENO" "$( quicktest_path_normalize "$BASH_SOURCE" )"'
alias print_if_not_file='f_print_if_not_file "$LINENO" "$( quicktest_path_normalize "$BASH_SOURCE" )"'
alias exists_but_not_file='f_exists_but_not_file "$LINENO" "$( quicktest_path_normalize "$BASH_SOURCE" )"'

shopt -s expand_aliases
