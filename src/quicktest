#! /usr/bin/env bash

set -e
source "$QT_COMMON_PATH"/error_handler
source "$QT_COMMON_PATH"/constants
source "$QT_COMMON_PATH"/data_interface
source "$QT_COMMON_PATH"/option_parser
source "$QT_COMMON_PATH"/common_options
set +e

print_usage() {

	printf_err "%s\n"               \
	'usage:'                        \
	'quicktest'                     \
	'    [--config-file]'           \
	'    [-h|--help]'               \
	'    [action [<args>]]'         \
	'    [boilerplate [<args>]]'    \
	'    [func [<args>]]'           \
	'    [instance [<args>]]'       \
	'    [open [<args>]]'           \
	'    [user_config [<args>]]'

}

parse_quicktest_options() {

	local option_parser_retval

	parse_options \
		'quicktest'                              '0'     \
		'action'      , 'a'                      'S'     \
		'boilerplate' , 'b'                      'S'     \
		'func'        , 'f'                      'S'     \
		'instance'    , 'i'                      'S'     \
		'open'        , 'o'                      'S'     \
		'user_config' , 'u'                      'S'     \
		                                                 \
		'--config-file'                          '0'     \
		'-h'          , '--help'                 '0'     \
		                                                 \
		';'                                              \
		"$@"

	option_parser_retval=$?

	if [ $option_parser_retval -ne 0 ] ; then
		option_parser_error_msg $option_parser_retval
		print_usage
		return_error
	fi

}

quicktest() {

	local shift_count
	local subcmd
	local default_options
	local qtc_file

	if [ -z "$*" ]
	then
		default_options="$( get_default_args )" || return_error
		eval set -- $default_options
	fi

	parse_quicktest_options "$@" || return_error

	for option in "${!OPTIONS[@]}"
	do
		case "$option" in

			action|boilerplate|func|instance|open|user_config)

				# All subcmd here

				# This contains the shift count needed to reach
				# args of subcmds
				shift_count=${OPTIONS[$option]}

				shift $shift_count
				subcmd=$option
				break
				;;
			--config-file)
				option_config_file || return_error
				;;
			-h)
				option_help
				;;
		esac
	done

	if [ -n "$subcmd" ]
	then
		"$QTBASH" "$SUB_COMMANDS_DIR/$subcmd/$subcmd" "$@" || return_error
	fi

	return 0
}

quicktest "$@"
